name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server
    strategy:
      matrix:
        ruby-version: ['3.0']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Run Rubocop
      run: |
        bundle exec rubocop
    - name: Install PostgreSQL client
      run: |
        sudo apt-get -yqq install libpq-dev
    - name: Build App
      env:
        RAILS_ENV: test
        REDIS_URL: "redis://localhost:6379/0"
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/mapper_test?pool=5&timeout=5000"
      run: |
        bin/rails db:setup
    - name: Run Tests
      env:
        RAILS_ENV: test
        REDIS_URL: "redis://localhost:6379/0"
        SESSION_SECRET: "thisisonlyfortesting"
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/mapper_test?pool=5&timeout=5000"
      run: |
        bundle exec rspec
  test_vue:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout master branch
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2.1.0
        with:
          path: node_modules
          key: ubuntu-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd frontend
          yarn install
      - name: Run ESLint
        run: |
          cd frontend
          yarn lint
      - name: Run unit tests
        run: |
          cd frontend
          yarn test:unit
